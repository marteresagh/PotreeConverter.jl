var documenterSearchIndex = {"docs":
[{"location":"index.html#PotreeConverter","page":"Home","title":"PotreeConverter","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"PotreeConverter.jl is a Julia version of PotreeConverter1.7 A Potree is a data structure, used to store huge point clouds, based on octree. All details of this structure are described by Markus Sch√ºtz in his thesis.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"(Image: potree)","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"2D simplification of the PotreeConverter steps to create a 3 levels multi-resolution octree.","category":"page"},{"location":"index.html#Build-up","page":"Home","title":"Build-up","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"PotreeConverter implement conversion of one or more point clouds in a Potree format, which saves the result in the filesystem:","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"Initially, the octree consists of a single root node, in which all the points are stored.\nA minimum distance, spacing, is defined as a function of the calculated cubic bounding box, CAABB.\nFor each unprocessed leaf node, which has reached a certain number of points, a subset M of points is extracted such that it satisfies the condition of Poisson Disk.\nThe remaining points are stored in a temporary array.\nThe leaf node expands iff the size of the array is greater than a chosen threshold.\nThe leaf node becomes an internal node storing in itself the subset M.\nThe remaining points are passed to the child nodes.\nSpacing is halved at each level.\nThe procedure is repeated until none of the processed leaf nodes expands further.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"The data is regularly flushed to the disk and removed from memory, whenever a certain number of points have been processed. This allows users to view the current conversion status in the Potree format after each flush, without having to wait until the conversion is complete.","category":"page"},{"location":"refs.html#References","page":"References","title":"References","text":"","category":"section"},{"location":"refs.html","page":"References","title":"References","text":"CurrentModule = PotreeConverter\nDocTestSetup = quote\nusing PotreeConverter\nend","category":"page"},{"location":"refs.html#Main-Structures","page":"References","title":"Main Structures","text":"","category":"section"},{"location":"refs.html","page":"References","title":"References","text":"PotreeWriter\nPWNode","category":"page"},{"location":"refs.html#PotreeConverter.PotreeWriter","page":"References","title":"PotreeConverter.PotreeWriter","text":"PotreeWriter\n\nMetastructure of potree.\n\n\n\n\n\n","category":"type"},{"location":"refs.html#PotreeConverter.PWNode","page":"References","title":"PotreeConverter.PWNode","text":"PWNode\n\nSIngle node of potree.\n\n\n\n\n\n","category":"type"},{"location":"refs.html#Main-references","page":"References","title":"Main references","text":"","category":"section"},{"location":"refs.html","page":"References","title":"References","text":"main\npotreeconvert\nadd","category":"page"},{"location":"refs.html#PotreeConverter.main","page":"References","title":"PotreeConverter.main","text":"main(sources,outdir,pageName)\n\nInterface.\n\nInput:\n\nsources: list of point clouds (file .las) to convert\noutdir: output folder\npageName: project name\n\nOutput:\n\nPotree structure saved in outdir: a single file .las for each node.\n\n\n\n\n\n","category":"function"},{"location":"refs.html#PotreeConverter.potreeconvert","page":"References","title":"PotreeConverter.potreeconvert","text":"potreeconvert(args::PotreeArguments)\n\nGenerates an octree LOD structure:\n\nRead all points in sources.\nAdd each point to a one node of octree.\nWrite all info and structures to the disk.\n\n\n\n\n\n","category":"function"},{"location":"refs.html#PotreeConverter.add","page":"References","title":"PotreeConverter.add","text":"add(potreeWriter::PotreeWriter,p::Point)\n\nAdd point in PotreeWriter store and process store.  \n\n\n\n\n\nadd(node::PWNode, point::Point, potreeWriter::PotreeWriter)::Union{Nothing,PWNode}\n\nAdd point in node if it is possible.\n\n\n\n\n\n","category":"function"}]
}
